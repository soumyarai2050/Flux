syntax = "proto2";

enum ButtonType{
  BUTTON_TYPE_UNSPECIFIED = 0;
  BUTTON_TYPE_ROUND = 1;
  BUTTON_TYPE_RECTANGLE = 2;
}

enum ButtonSize{
  BUTTON_SIZE_UNSPECIFIED = 0;
  BUTTON_SIZE_SMALL = 1;
  BUTTON_SIZE_MEDIUM = 2;
  BUTTON_SIZE_LARGE = 3;
}

enum Theme{
    THEME_UNSPECIFIED = 0;
    THEME_DARK = 1;
    THEME_LIGHT = 3;
}

enum ChartType {
  CHART_TYPE_UNSPECIFIED = 0;
  bar = 1;
  line = 2;
  scatter = 3;
}

enum HoverTextType{
    HoverTextType_NONE = 0;
    HoverTextType_VALUE = 1;
    HoverTextType_PERCENTAGE = 3;
    HoverTextType_VALUE_AND_PERCENTAGE = 4;
}

enum UILayoutType{
  UI_ABBREVIATED_FILTER = 0;
  UI_TABLE = 1;
  UI_TREE = 2;
  UI_GRAPH = 3;
  UI_TABBED_TABLE = 4;
  UI_PIVOT_TABLE = 5;
  UI_CHART = 6;
}

enum UICRUDType{
  GET_ = 0;
  GET_ALL = 1;
  CREATE = 2;
}

message WebPageUIData{
  optional Theme theme = 1;
}

message UIQueryParam{
  required string query_param_name = 1;
  required string query_param_value_src = 2;
}

message OverrideDefaultCRUD{
  required UICRUDType ui_crud_type = 1;
  required string query_name = 2;
  optional string query_src_model_name = 3;  // Source can be only one
  repeated UIQueryParam ui_query_params = 4;
}

message JoinSort {
  required SortOrder sort_order = 1;
  repeated string placeholders = 2;
}

message WidgetUIDataElement {
  // key string connects Widget with Model - future better name via: [(FluxFldAlias) = 'i']
  optional string i = 1;
  // X coordinate magnitude (left most is 0)
  optional int32 x = 2;
  // Y coordinate magnitude (top most is 0)
  optional int32 y = 3;
  // width
  optional int32 w = 4;
  // height
  optional int32 h = 5;
  optional bool is_repeated = 7 [default = false];
  optional string alert_bubble_source = 8;
  optional string alert_bubble_color = 9;
  optional bool disable_ws_on_edit = 10 [default = false];
  // allows user-data-model identifier bound UI configuration - user can save different UI configs for each unique ID. Value to be MessageName.FieldName from the target model
  optional string bind_id_fld = 11;
  optional string dynamic_widget_title_fld = 12;
  repeated WidgetUIData widget_ui_data = 13;
  repeated ChartData chart_data = 14;
  repeated UIFilter filters = 15;
  optional string depending_proto_model_name = 16;   // other project's proto model name present in proto_file_name
                                          // on which current model is dependent
  optional bool depends_on_other_model_for_id = 17 [default=false];
  optional string depending_proto_model_field_name_for_host = 18;
  optional string depending_proto_model_field_name_for_port = 19;
  optional bool depending_proto_model_for_cpp_port = 20;
  optional bool is_model_alert_type = 21;
  optional JoinSort join_sort = 22;
  optional bool is_read_only = 23;
  optional int32 default_rows_per_page = 24;  // supported values = 25, 50
  optional int32 server_running_status_lvl = 25;
  optional bool ws_connection_by_get_all = 26;  // for abbreviation widget
  repeated PivotData pivot_data = 27;
}

message WidgetUIOption {
  optional string depending_proto_file_name = 1;  // other project's proto file name on which current model is dependent
}

message ColumnOrder {
  required string column_name = 1;
  required int32 sequence = 2;
}

message SortOrder {
  required string order_by = 1;
  required string sort_type = 2;
}

message WidgetUIData{
  // for UI to store the bounded id value
  optional string bind_id_val = 1;
  optional UILayoutType view_layout = 2;  // layout in READ mode
  optional UILayoutType edit_layout = 3;  // layout in EDIT mode
  repeated string enable_override = 4;
  repeated string disable_override = 5;
  repeated ColumnOrder column_orders = 6;
  repeated SortOrder sort_orders = 7;
  repeated string join_by = 8;
  optional bool joined_at_center = 9 [default = false];  // if set, all join keys are at center
  optional bool flip = 10 [default = false];  // if set, column orders are reversed
  repeated string show_less = 11;
  repeated string data_source_colors = 12;
  optional int32 rows_per_page = 13;
  optional bool highlight_update = 14 [default = false];
  optional bool truncate_date_time = 15 [default = false];
  repeated string pinned = 16;
  optional string selected_chart_name = 17;
  repeated string chart_enable_override = 18;
  optional string selected_pivot_name = 19;
  repeated string pivot_enable_override = 20;
  repeated string absolute_sort_override = 21;
}

message UIButton{
  optional string unpressed_caption = 1;
  optional string pressed_caption = 2;
  optional string disabled_captions = 3; // comma separated list of value=caption
  optional ButtonType button_type = 5;
  optional ButtonSize button_size = 6;
  optional string value_color_map = 7;  // comma separated list of key=value
  optional string action = 8;
  required string pressed_value_as_text = 9;
  optional string button_icon_name = 10;
  optional bool allow_force_update = 11 [default = false];  // if true, double click will trigger update without confirmation
  optional bool read_only = 12 [default = false];  // if true, button is hidden in edit mode
  optional bool hide_caption = 13 [default = false];
}

message UIProgressBar{
  optional string value_color_map = 1;  // coma separated list of key=value
  optional HoverTextType hover_text_type = 2;  // x of y
  optional bool is_reverse = 3; // if this is set to true the progress bar is reversed (e.g: 20 in 0-100 is 20% on progress bar, if is_reverse property is set the same 20 is 80% on the progress bar)
}

message ChartEncode {
  optional string x = 1;
  required string y = 2;
}

message ChartSeries {
  optional string id = 1;
  required ChartType type = 2;
  required ChartEncode encode = 3;
  optional bool stack = 4;
  optional float y_min = 5;
  optional float y_max = 6;
}

message ChartData {
  optional string id = 1;
  required string chart_name = 2;
  optional bool time_series = 3 [default = false];
  repeated UIFilter filters = 4;
  optional string partition_fld = 5;
  repeated ChartSeries series = 6;
}

message UIFilter {
  required string fld_name = 1;
  required string fld_value = 2;
}

message PivotData {
  optional string id = 1;
  optional string pivot_name = 2;
  repeated string rows = 3;
  repeated string cols = 4;
  repeated string vals = 5;
  optional string aggregator_name = 7;
  optional string renderer_name = 8;
  optional string value_filter = 9;
}