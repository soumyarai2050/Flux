syntax = "proto2";
import "flux_options.proto";

package phone_book;

enum ReferencePxType{
  OPEN_PX = 1;
  CLOSE_PX = 2;
  LAST_PX = 3;
  BB_PX = 4;
  BO_PX = 5;
  FILL_PX = 6;
}

enum BrokerCode {
  ZERODHA = 1;
  KOTAK = 2;
}

enum BrokerRoute {
  BR_QFII = 1;
  BR_CONNECT = 2;
}

message ReferencePx{
  required float px = 1;
  required ReferencePxType reference_px_type = 2;
}

message MaxNotional{
  required float max_per_side_notional = 1 [(FluxFldDisplayType) = "int", (FluxFldTitle) = "max per side $", (FluxFldNumberFormat) = "$", (FluxFldHelp) = "non-changeable from UI: used as cap on max per side notional at time of plan creation"];
  required float max_primary_notional = 2 [(FluxFldDisplayType) = "int", (FluxFldTitle) = "max primary $", (FluxFldNumberFormat) = "$", (FluxFldHelp) = "consumption: open+executed, max eqt notional derived applying hedge ratio"];
  required float sod = 3;
  required float available_pths = 4;
  required float available_locates = 5;
}

message RollingMaxChoreCount{
  required int32 max_rolling_tx_count = 1 [(FluxFldHelp) = "max new chores count allowed per period defined below"];
  optional int32 rolling_tx_count_period_seconds = 2 [(FluxFldHelp) = "sliding window interval of above count enforcement, not setting this value implies SOD is window-start & checking-time as window-end"];
}


enum PlanMode{
  PlanMode_Normal = 0;
  PlanMode_Relaxed = 1;
  PlanMode_Aggressive = 2;
}

enum PlanType {
	Premium = 1;
	AH = 2;
}
