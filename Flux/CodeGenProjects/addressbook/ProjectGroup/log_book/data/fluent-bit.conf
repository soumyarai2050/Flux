# ==================
# Global Service Configuration
# ==================
[SERVICE]
    # Flush logs through the pipeline every 0.1 seconds for near real-time processing
    Flush        0.1
    # Run Fluent Bit as a background daemon (change to 'off' for foreground debugging)
    Daemon       off
    # Log level: error, warning, info, debug, trace
    Log_Level    info
    # Location of parsers file
    Parsers_File ${FLUX_CODEGEN_BASE_DIR}/log_book/data/parsers.conf
    # Enable built-in HTTP server for monitoring Fluent Bit itself
    HTTP_Server  On
    HTTP_Listen  0.0.0.0
    HTTP_Port    2020
    # --- Buffer Management ---
    # Use filesystem buffering to prevent data loss on crashes/restarts
    storage.path /var/fluent-bit/state/
    storage.sync normal
    storage.checksum off
    # Set memory limit for backlog buffer to 50MB
    storage.backlog.mem_limit 50M
    # Enable storage metrics (visible via HTTP_Server)
    storage.metrics on

# ==================
# Input #1: Pair Planegy Engine Logs
# ==================
[INPUT]
    Name             tail
    Alias            phone_book_logs
    Tag              pair_plan.log
    Path             ${FLUX_CODEGEN_BASE_DIR}/phone_book/log/*.log
    Path_Key         source_file
    Parser           custom_log_parser
    DB               /var/fluent-bit/state/flb_pair_plan.db
    DB.Sync          Normal
    Mem_Buf_Limit    10MB
    Refresh_Interval 2
    # Multiline support is disabled for now due to compatibility issues
    Multiline        Off
    Skip_Empty_Lines On
    Skip_Long_Lines  On
    Rotate_Wait      5
    Exit_On_Eof      false

# ==================
# Immediate initial Parser Filter for Pair Planegy Engine Logs
# ==================
[FILTER]
    Name          grep
    Match         pair_plan.log
    Regex         level ${FILTER_LOG_LVL}

# Add any ignore regex pattern for pair_plan.log below - follow same for any input
#[FILTER]
#    Name          grep
#    Match         pair_plan.log
#    Exclude       message some_regex_pattern

# Add component metadata to Pair Planegy logs
[FILTER]
    Name          record_modifier
    Match         pair_plan.log
    Record        component_name phone_book
    Record        log_type bartering_engine

# ==================
# Input #2: Planegy Executor Logs
# ==================
[INPUT]
    Name             tail
    Alias            street_book_logs
    Tag              street_book.log
    Path             ${FLUX_CODEGEN_BASE_DIR}/street_book/log/street_book_*.log
    Path_Key         source_file
    Parser           custom_log_parser
    DB               /var/fluent-bit/state/flb_street_book.db
    DB.Sync          Normal
    Mem_Buf_Limit    10MB
    Refresh_Interval 2
    Multiline        Off
    Skip_Empty_Lines On
    Skip_Long_Lines  On
    Rotate_Wait      5
    Exit_On_Eof      false

# ==================
# Immediate initial Parser Filter for Planegy Executor Logs
# ==================
[FILTER]
    Name          grep
    Match         street_book.log
    Regex         level ${FILTER_LOG_LVL}

# Add component metadata to Planegy Executor logs
[FILTER]
    Name          record_modifier
    Match         street_book.log
    Record        component_name street_book
    Record        log_type bartering_engine

# ==================
# Input #3: Post Barter Engine Logs
# ==================
[INPUT]
    Name             tail
    Alias            post_book_logs
    Tag              post_barter.log
    Path             ${FLUX_CODEGEN_BASE_DIR}/post_book/log/*.log
    Path_Key         source_file
    Parser           custom_log_parser
    DB               /var/fluent-bit/state/flb_post_barter.db
    DB.Sync          Normal
    Mem_Buf_Limit    10MB
    Refresh_Interval 2
    Multiline        Off
    Skip_Empty_Lines On
    Skip_Long_Lines  On
    Rotate_Wait      5
    Exit_On_Eof      false

# ==================
# Immediate initial Parser Filter for Post Barter Engine Logs
# ==================
[FILTER]
    Name          grep
    Match         post_barter.log
    Regex         level ${FILTER_LOG_LVL}

# Add component metadata to Post Barter Engine logs
[FILTER]
    Name          record_modifier
    Match         post_barter.log
    Record        component_name post_book
    Record        log_type bartering_engine

# ==================
# Input #4: Planegy View Engine Logs
# ==================
[INPUT]
    Name             tail
    Alias            photo_book_logs
    Tag              plan_view.log
    Path             ${FLUX_CODEGEN_BASE_DIR}/photo_book/log/*.log
    Path_Key         source_file
    Parser           custom_log_parser
    DB               /var/fluent-bit/state/flb_plan_view.db
    DB.Sync          Normal
    Mem_Buf_Limit    10MB
    Refresh_Interval 2
    Multiline        Off
    Skip_Empty_Lines On
    Skip_Long_Lines  On
    Rotate_Wait      5
    Exit_On_Eof      false

# ==================
# Immediate initial Parser Filter for Planegy View Engine Logs
# ==================
[FILTER]
    Name          grep
    Match         plan_view.log
    Regex         level ${FILTER_LOG_LVL}

# Add component metadata to Planegy View Engine logs
[FILTER]
    Name          record_modifier
    Match         plan_view.log
    Record        component_name photo_book
    Record        log_type bartering_engine

# ==================
# Input #5: Log Simulator Logs
# ==================
[INPUT]
    Name             tail
    Alias            log_simulator_logs
    Tag              log_simulator.log
    Path             ${FLUX_CODEGEN_BASE_DIR}/street_book/log/log_simulator_*.log
    Path_Key         source_file
    Parser           custom_log_parser
    DB               /var/fluent-bit/state/flb_log_simulator.db
    DB.Sync          Normal
    Mem_Buf_Limit    10MB
    Refresh_Interval 2
    Multiline        Off
    Skip_Empty_Lines On
    Skip_Long_Lines  On
    Rotate_Wait      5
    Exit_On_Eof      false

# ==================
# Immediate initial Parser Filter for Log Simulator Logs
# ==================
[FILTER]
    Name          grep
    Match         log_simulator.log
    Regex         level ^(INFO|WARNING|ERROR|CRITICAL)$

# Add component metadata to Log Simulator logs
[FILTER]
    Name          record_modifier
    Match         log_simulator.log
    Record        component_name street_book_log_simulator
    Record        log_type simulation

# ==================
# Input #6: Basket Executor Logs
# ==================
[INPUT]
    Name             tail
    Alias            basket_book_logs
    Tag              basket_book.log
    Path             ${FLUX_CODEGEN_BASE_DIR}/basket_book/log/*.log
    Path_Key         source_file
    Parser           custom_log_parser
    DB               /var/fluent-bit/state/flb_basket_book.db
    DB.Sync          Normal
    Mem_Buf_Limit    10MB
    Refresh_Interval 2
    Multiline        Off
    Skip_Empty_Lines On
    Skip_Long_Lines  On
    Rotate_Wait      5
    Exit_On_Eof      false

# ==================
# Immediate initial Parser Filter for Planegy View Engine Logs
# ==================
[FILTER]
    Name          grep
    Match         basket_book.log
    Regex         level ${FILTER_LOG_LVL}

# Add component metadata to Planegy View Engine logs
[FILTER]
    Name          record_modifier
    Match         basket_book.log
    Record        component_name basket_book
    Record        log_type bartering_engine

# ==================
# Parser Filters for Pattern-Based Routing (Log Simulator)
# ==================
# Filter for INFO logs starting with '$$$'
[FILTER]
    Name          grep
    Match         log_simulator.log
    Regex         level INFO
    Regex         message ^\$\$\$.*

[FILTER]
    Name          rewrite_tag
    Match         log_simulator.log
    Rule          $message ^\$\$\$.* log_simulator.log.simulation_event false
    Emitter_Name  re_emitted_sim_events

# Filter for WARNING, ERROR, or CRITICAL logs
[FILTER]
    Name          grep
    Match         log_simulator.log
    Regex         level (WARNING|ERROR|CRITICAL)

[FILTER]
    Name          rewrite_tag
    Match         log_simulator.log
    Rule          $level ^(WARNING|ERROR|CRITICAL)$ log_simulator.log.contact_alert false
    Emitter_Name  re_emitted_contact

# ==================
# Parser Filters for all inputs except log_simulator.log
# ==================

# Filter for level TIMING - use for perf benchmarking
[FILTER]
    Name          rewrite_tag
    Match         street_book.log
    Rule          $level TIMING perf_benchmark false
    Emitter_Name  re_emitted_pref_benchmark_executor

[FILTER]
    Name          rewrite_tag
    Match         pair_plan.log
    Rule          $level TIMING perf_benchmark false
    Emitter_Name  re_emitted_pref_benchmark_pair_plan

[FILTER]
    Name          rewrite_tag
    Match         post_barter.log
    Rule          $level TIMING perf_benchmark false
    Emitter_Name  re_emitted_pref_benchmark_post_barter

[FILTER]
    Name          rewrite_tag
    Match         plan_view.log
    Rule          $level TIMING perf_benchmark false
    Emitter_Name  re_emitted_pref_benchmark_plan_view

[FILTER]
    Name          rewrite_tag
    Match         basket_book.log
    Rule          $level TIMING perf_benchmark false
    Emitter_Name  re_emitted_pref_benchmark_basket_book

# Filter for messages starting having level DB

[FILTER]
    Name          rewrite_tag
    Match         street_book.log
    Rule          $level DB plan_view_update false
    Emitter_Name  re_emitted_view_executor

[FILTER]
    Name          rewrite_tag
    Match         pair_plan.log
    Rule          $level DB plan_view_update false
    Emitter_Name  re_emitted_view_pair_plan

[FILTER]
    Name          rewrite_tag
    Match         post_barter.log
    Rule          $level DB plan_view_update false
    Emitter_Name  re_emitted_view_post_barter

[FILTER]
    Name          rewrite_tag
    Match         plan_view.log
    Rule          $level DB plan_view_update false
    Emitter_Name  re_emitted_view_plan_view

[FILTER]
    Name          rewrite_tag
    Match         basket_book.log
    Rule          $level DB plan_view_update false
    Emitter_Name  re_emitted_view_basket_book

# Filter for messages with %%.*%% pattern

[FILTER]
    Name          rewrite_tag
    Match         pair_plan.log
    Rule          $message %%.*%% symbol_side_alert false
    Emitter_Name  re_emitted_symbol_side_pair_plan

[FILTER]
    Name          rewrite_tag
    Match         post_barter.log
    Rule          $message %%.*%% symbol_side_alert false
    Emitter_Name  re_emitted_symbol_side_post_barter

[FILTER]
    Name          rewrite_tag
    Match         plan_view.log
    Rule          $message %%.*%% symbol_side_alert false
    Emitter_Name  re_emitted_symbol_side_plan_view

[FILTER]
    Name          rewrite_tag
    Match         basket_book.log
    Rule          $message %%.*%% symbol_side_alert false
    Emitter_Name  re_emitted_symbol_side_basket_book

# ==================
# Output Configuration for Log Simulator Logs
# ==================
# Output for INFO logs with '$$$' pattern
[OUTPUT]
    Name             http
    Alias            simulator_events_output
    Match            log_simulator.log.simulation_event
    Host             127.0.0.1
    Port             8030
    URI              /log_book/query-handle_simulate_log
    Format           json
    Json_Date_Format iso8601
    Json_Date_Key    timestamp
    allow_duplicated_headers false
    Retry_Limit      5
    tls              Off
    tls.verify       Off
    Workers          4
    net.keepalive    on
    net.keepalive_idle_timeout 30

# Output for WARNING/ERROR/CRITICAL logs (contact alerts)
[OUTPUT]
    Name             http
    Alias            contact_alerts_output
    Match            log_simulator.log.contact_alert
    Host             127.0.0.1
    Port             8030
    URI              /log_book/query-handle_contact_alerts
    Format           json
    Json_Date_Format iso8601
    Json_Date_Key    timestamp
    allow_duplicated_headers false
    Retry_Limit      5
    tls              Off
    tls.verify       Off
    Workers          4
    net.keepalive    on

# ==================
# Output Configuration for Other Inputs
# ==================
# Output for level DB
[OUTPUT]
    Name             http
    Alias            plan_view_updates_output
    Match            plan_view_update
    Host             127.0.0.1
    Port             8070
    URI              /photo_book/query-handle_plan_view_updates
    Format           json
    Json_Date_Format iso8601
    Json_Date_Key    timestamp
    allow_duplicated_headers false
    Retry_Limit      5
    tls              Off
    tls.verify       Off
    Workers          4
    net.keepalive    on

# Output for all street_book logs
[OUTPUT]
    Name             http
    Alias            street_book_alerts_output
    Match            street_book.log
    Host             127.0.0.1
    Port             8030
    URI              /log_book/query-handle_plan_alerts_with_plan_id
    Format           json
    Json_Date_Format iso8601
    Json_Date_Key    timestamp
    allow_duplicated_headers false
    Retry_Limit      5
    tls              Off
    tls.verify       Off
    Workers          4
    net.keepalive    on

# Output for messages with %%.*%% pattern
[OUTPUT]
    Name             http
    Alias            symbol_side_alerts_output
    Match            symbol_side_alert
    Host             127.0.0.1
    Port             8030
    URI              /log_book/query-handle_plan_alerts_with_symbol_side
    Format           json
    Json_Date_Format iso8601
    Json_Date_Key    timestamp
    allow_duplicated_headers false
    Retry_Limit      5
    tls              Off
    tls.verify       Off
    Workers          4
    net.keepalive    on

# Output for perf benchmark
[OUTPUT]
    Name             http
    Alias            perf_benchmark_output
    Match            perf_benchmark
    Host             127.0.0.1
    Port             8030
    URI              /log_book/query-handle_perf_benchmark
    Format           json
    Json_Date_Format iso8601
    Json_Date_Key    timestamp
    allow_duplicated_headers false
    Retry_Limit      5
    tls              Off
    tls.verify       Off
    Workers          4
    net.keepalive    on

# Default output for all remaining logs
[OUTPUT]
    Name             http
    Alias            default_pair_plan_alerts_output
    Match            pair_plan.log
    Host             127.0.0.1
    Port             8030
    URI              /log_book/query-handle_contact_alerts
    Format           json
    Json_Date_Format iso8601
    Json_Date_Key    timestamp
    allow_duplicated_headers false
    Retry_Limit      5
    tls              Off
    tls.verify       Off
    Workers          4
    net.keepalive    on

# Default output for all remaining logs
[OUTPUT]
    Name             http
    Alias            default_post_barter_alerts_output
    Match            post_barter.log
    Host             127.0.0.1
    Port             8030
    URI              /log_book/query-handle_contact_alerts
    Format           json
    Json_Date_Format iso8601
    Json_Date_Key    timestamp
    allow_duplicated_headers false
    Retry_Limit      5
    tls              Off
    tls.verify       Off
    Workers          4
    net.keepalive    on

# Default output for all remaining logs
[OUTPUT]
    Name             http
    Alias            default_plan_view_alerts_output
    Match            plan_view.log
    Host             127.0.0.1
    Port             8030
    URI              /log_book/query-handle_contact_alerts
    Format           json
    Json_Date_Format iso8601
    Json_Date_Key    timestamp
    allow_duplicated_headers false
    Retry_Limit      5
    tls              Off
    tls.verify       Off
    Workers          4
    net.keepalive    on

# Default output for all remaining logs
[OUTPUT]
    Name             http
    Alias            default_basket_book_alerts_output
    Match            basket_book.log
    Host             127.0.0.1
    Port             8030
    URI              /log_book/query-handle_contact_alerts
    Format           json
    Json_Date_Format iso8601
    Json_Date_Key    timestamp
    allow_duplicated_headers false
    Retry_Limit      5
    tls              Off
    tls.verify       Off
    Workers          4
    net.keepalive    on

# Metrics and Monitoring Output
[OUTPUT]
    Name  prometheus_exporter
    Match *
    Host  0.0.0.0
    Port  2021