# ==================
# Parser Configuration
# ==================

# ==================
# Custom Log Parser (DEBUG|INFO|DB|WARNING|ERROR|CRITICAL|TIMING)
# ==================
[PARSER]
    # Parser name (referenced in the INPUT section)
    Name        custom_log_parser
    # Type of format (regex, json, logfmt, etc.)
    Format      regex
    # Regular expression pattern to parse custom log format - aligns with our log pattern - todo: file and package
    # Captures: time, level, file, line, and message
    Regex       ^(?<time>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2},\d{3}) : (?<level>DEBUG|INFO|DB|WARNING|ERROR|CRITICAL|TIMING) : \[(?<file>[^\s:]+) : (?<line>\d+)\] : (?<message>.*)$
    # Field that contains the timestamp
    Time_Key    time
    # Time format (strftime-compatible)
    # %L is milliseconds
    Time_Format %Y-%m-%d %H:%M:%S,%L
    # Data types for specific fields
    Types       line:integer

# ==================
# Multiline Parser Configuration
# ==================
# This is preserved but not currently used as multiline is disabled
[PARSER]
    Name        multiline_parser
    Format      regex
    Regex       ^(?<time>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2},\d{3})
    Time_Key    time
    Time_Format %Y-%m-%d %H:%M:%S,%L

# ==================
# JSON Parser
# ==================
[PARSER]
    Name        json_parser
    Format      json
    Time_Key    timestamp
    Time_Format %Y-%m-%d %H:%M:%S,%L