# ==================
# Global Service Configuration
# ==================
[SERVICE]
    # Redirect Fluent Bit's internal logs to a file
    Log_File     <FLUENT_BIT_LOG_FILE>
    # Flush logs through the pipeline every 0.1 seconds for near real-time processing
    Flush        0.1
    # Run Fluent Bit as a background daemon (change to 'off' for foreground debugging)
    Daemon       off
    # Log level: error, warning, info, debug, trace
    Log_Level    warning
    # Location of parsers file
    Parsers_File <PARSER_FILE_PATH>
    # Enable built-in HTTP server for monitoring Fluent Bit itself
    HTTP_Server  On
    HTTP_Listen  0.0.0.0
    HTTP_Port    <FLB_HTTP_PORT>
    # --- Buffer Management ---
    # Use filesystem buffering to prevent data loss on crashes/restarts
    storage.path ${HOME}/fluent-bit/state/
    storage.sync normal
    storage.checksum off
    # Set memory limit for backlog buffer to 50MB
    storage.backlog.mem_limit 50M
    # Enable storage metrics (visible via HTTP_Server)
    storage.metrics on

# ==================
# Input #1: Planegy Executor Logs
# ==================
[INPUT]
    Name             tail
    Alias            street_book_logs
    Tag              street_book.log
    Path             <EXECUTOR_LOG_FILE_PATH>
    Path_Key         source_file
    Parser           custom_log_parser
    DB               ${HOME}/fluent-bit/state/<FLB_EXECUTOR_DB_NAME>
    DB.Sync          Normal
    Mem_Buf_Limit    10MB
    Refresh_Interval 2
    Multiline        Off
    Skip_Empty_Lines On
    Skip_Long_Lines  On
    Rotate_Wait      5
    Exit_On_Eof      false

# ==================
# Immediate initial Parser Filter for Planegy Executor Logs
# ==================
[FILTER]
    Name          grep
    Match         street_book.log
    Regex         level <FILTER_LOG_LVL>

# Add component metadata to Planegy Executor logs
[FILTER]
    Name          record_modifier
    Match         street_book.log
    Record        file_name_regex street_book_(\d+)_logs_\d{8}\.log


# ==================
# Input #2: Log Simulator Logs
# ==================
[INPUT]
    Name             tail
    Alias            log_simulator_logs
    Tag              log_simulator.log
    Path             <LOG_SIM_FILE_PATH>
    Path_Key         source_file
    Parser           custom_log_parser
    DB               ${HOME}/fluent-bit/state/<FLB_LOG_SIM_DB_NAME>
    DB.Sync          Normal
    Mem_Buf_Limit    10MB
    Refresh_Interval 2
    Multiline        Off
    Skip_Empty_Lines On
    Skip_Long_Lines  On
    Rotate_Wait      5
    Exit_On_Eof      false

# ==================
# Parser Filters for Pattern-Based Routing (Log Simulator)
# ==================
# Filter for INFO logs starting with '$$$'
[FILTER]
    Name          grep
    Match         log_simulator.log
    Regex         level INFO
    Regex         message ^\$\$\$.*

[FILTER]
    Name          rewrite_tag
    Match         log_simulator.log
    Rule          $message ^\$\$\$.* log_simulator.log.simulation_event false
    Emitter_Name  re_emitted_sim_events

# Filter for WARNING, ERROR, or CRITICAL logs
[FILTER]
    Name          grep
    Match         log_simulator.log
    Regex         level (WARNING|ERROR|CRITICAL)

[FILTER]
    Name          rewrite_tag
    Match         log_simulator.log
    Rule          $level ^(WARNING|ERROR|CRITICAL)$ log_simulator.log.plan_alert false
    Emitter_Name  re_emitted_contact

# Add component metadata to Planegy simulator logs
[FILTER]
    Name          record_modifier
    Match         log_simulator.log.plan_alert
    Record        file_name_regex log_simulator_(\d+)_logs_\d{8}\.log

# ==================
# Parser Filters for all inputs except log_simulator.log
# ==================

# Filter for level TIMING - use for perf benchmarking
[FILTER]
    Name          rewrite_tag
    Match         street_book.log
    Rule          $level TIMING perf_benchmark false
    Emitter_Name  re_emitted_pref_benchmark_executor

# Filter for messages starting with ^^^ which means it is plan_view update
[FILTER]
    Name          rewrite_tag
    Match         street_book.log
    Rule          $message ^\^\^\^ plan_view_update false
    Emitter_Name  re_emitted_plan_view_update_executor

# Filter for messages starting with ^*^ which means it is pair_plan update
[FILTER]
    Name          rewrite_tag
    Match         street_book.log
    Rule          $message ^\^\*\^ pair_plan_update false
    Emitter_Name  re_emitted_pair_plan_view_update_executor

# Filters for plan pause
[FILTER]
    Name          rewrite_tag
    Match         street_book.log
    Rule          $message ^LMT_UP_DN: pause_plan false
    Emitter_Name  re_emitted_pause_plan_case_1

[FILTER]
    Name          rewrite_tag
    Match         street_book.log
    Rule          $message ^Chore\sfound\soverfilled\sfor pause_plan false
    Emitter_Name  re_emitted_pause_plan_case_2

# Filter for plan state change handling
[FILTER]
    Name          rewrite_tag
    Match         street_book.log
    Rule          $message Plan\sstate\schanged\sfrom\sPlanState_ACTIVE\sto\sPlanState_PAUSED plan_state_paused false
    Emitter_Name  re_emitted_plan_state_paused

# Filters for position disable
[FILTER]
    Name          rewrite_tag
    Match         street_book.log
    Rule          $message ^EXT: pos_disable false
    Emitter_Name  re_emitted_pos_disable_case_1

# Filters for enable disable plan_alerts
[FILTER]
    Name          rewrite_tag
    Match         street_book.log
    Rule          $message ^\*\^\* enable_disable_plan_alert false
    Emitter_Name  re_emitted_enable_disable_plan_alert

# Filters for remove plan_alerts by plan_id
[FILTER]
    Name          rewrite_tag
    Match         street_book.log
    Rule          $message ^-\*\*\*- remove_plan_alert false
    Emitter_Name  re_emitted_remove_plan_alert

# ==================
# Output Configuration for Log Simulator Logs
# ==================
# Output for INFO logs with '$$$' pattern
[OUTPUT]
    Name             http
    Alias            simulator_events_output
    Match            log_simulator.log.simulation_event
    Host             <HOST>
    Port             8030
    URI              /log_book/query-handle_simulate_log
    Format           json
    Json_Date_Format iso8601
    Json_Date_Key    timestamp
    allow_duplicated_headers false
    Retry_Limit      5
    tls              Off
    tls.verify       Off
    Workers          4
    net.keepalive    on
    net.keepalive_idle_timeout 30

# ==================
# Output Configuration for Other Inputs
# ==================
# Output for level DB
[OUTPUT]
    Name             http
    Alias            plan_view_updates_output
    Match            plan_view_update
    Host             <HOST>
    Port             8070
    URI              /photo_book/query-handle_plan_view_updates
    Format           json
    Json_Date_Format iso8601
    Json_Date_Key    timestamp
    allow_duplicated_headers false
    Retry_Limit      5
    tls              Off
    tls.verify       Off
    Workers          4
    net.keepalive    on

# Output for all logs with plan id
[OUTPUT]
    Name             http
    Alias            street_book_alerts_output
    Match_Regex      ^(street_book\.log|log_simulator\.log\.plan_alert)$
    Host             <HOST>
    Port             8030
    URI              /log_book/query-handle_plan_alerts_with_plan_id
    Format           json
    Json_Date_Format iso8601
    Json_Date_Key    timestamp
    allow_duplicated_headers false
    Retry_Limit      5
    tls              Off
    tls.verify       Off
    Workers          4
    net.keepalive    on

# Output for perf benchmark
#[OUTPUT]
#    Name             http
#    Alias            perf_benchmark_output
#    Match            perf_benchmark
#    Host             <HOST>
#    Port             8060
#    URI              /performance_benchmark/query-handle_perf_benchmark
#    Format           json
#    Json_Date_Format iso8601
#    Json_Date_Key    timestamp
#    allow_duplicated_headers false
#    Retry_Limit      5
#    tls              Off
#    tls.verify       Off
#    Workers          4
#    net.keepalive    on

[OUTPUT]
    Name             http
    Alias            pause_plan_output
    Match            pause_plan
    Host             <HOST>
    Port             8030
    URI              /log_book/query-handle_plan_pause_from_plan_id_log
    Format           json
    Json_Date_Format iso8601
    Json_Date_Key    timestamp
    allow_duplicated_headers false
    Retry_Limit      5
    tls              Off
    tls.verify       Off
    Workers          4
    net.keepalive    on

[OUTPUT]
    Name             http
    Alias            pos_disable_output
    Match            pos_disable
    Host             <HOST>
    Port             8030
    URI              /log_book/query-handle_pos_disable_from_plan_id_log
    Format           json
    Json_Date_Format iso8601
    Json_Date_Key    timestamp
    allow_duplicated_headers false
    Retry_Limit      5
    tls              Off
    tls.verify       Off
    Workers          4
    net.keepalive    on

[OUTPUT]
    Name             http
    Alias            pair_plan_update_output
    Match            pair_plan_update
    Host             <HOST>
    Port             8030
    URI              /log_book/query-handle_pair_plan_updates_from_logs
    Format           json
    Json_Date_Format iso8601
    Json_Date_Key    timestamp
    allow_duplicated_headers false
    Retry_Limit      5
    tls              Off
    tls.verify       Off
    Workers          4
    net.keepalive    on

[OUTPUT]
    Name             http
    Alias            enable_disable_plan_alert_handler
    Match            enable_disable_plan_alert
    Host             ${HOST}
    Port             8030
    URI              /log_book/query-enable_disable_plan_alert_create
    Format           json
    Json_Date_Format iso8601
    Json_Date_Key    timestamp
    allow_duplicated_headers false
    Retry_Limit      5
    tls              Off
    tls.verify       Off
    Workers          4
    net.keepalive    on

[OUTPUT]
    Name             http
    Alias            remove_plan_alert_handler
    Match            remove_plan_alert
    Host             ${HOST}
    Port             8030
    URI              /log_book/query-remove_plan_alerts_for_plan_id
    Format           json
    Json_Date_Format iso8601
    Json_Date_Key    timestamp
    allow_duplicated_headers false
    Retry_Limit      5
    tls              Off
    tls.verify       Off
    Workers          4
    net.keepalive    on

[OUTPUT]
    Name             http
    Alias            plan_state_paused_handler
    Match            plan_state_paused
    Host             ${HOST}
    Port             8030
    URI              /log_book/query-plan_state_update_matcher_for_plan_id_log
    Format           json
    Json_Date_Format iso8601
    Json_Date_Key    timestamp
    allow_duplicated_headers false
    Retry_Limit      5
    tls              Off
    tls.verify       Off
    Workers          4
    net.keepalive    on

# Metrics and Monitoring Output
[OUTPUT]
    Name  prometheus_exporter
    Match *
    Host  0.0.0.0
    Port  <FB_HTTP_PORT>