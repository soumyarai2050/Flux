syntax = "proto2";
import "flux_options.proto";
import "trade_core.proto";

package addressbook;

enum ReferencePxType{
  OPEN_PX = 1;
  CLOSE_PX = 2;
  LAST_PX = 3;
  BB_PX = 4;
  BO_PX = 5;
  FILL_PX = 6;
}

message ReferencePx{
  required float px = 1;
  required ReferencePxType reference_px_type = 2;
}

message MaxNotional{
  required float max_per_side_notional = 1 [(FluxFldDisplayType) = "int", (FluxFldHelp) = "non-changeable from UI: used as cap on max per side notional at time of strat creation"];
  required float max_primary_notional = 2 [(FluxFldDisplayType) = "int", (FluxFldHelp) = "consumption: open+executed, max eqt notional derived applying hedge ratio"];
  required float sod = 3;
  required float available_pths = 4;
  required float available_locates = 5;
}

message OrderBrief{
  required string order_id = 1;
  required Security security = 2;
  required Side side = 3;
  optional float px = 4;
  optional int64 qty = 5;
  optional float order_notional = 6 [(FluxFldDisplayType) = "int"];
  required string underlying_account = 7;
  optional string exchange = 8;
  repeated string text = 9 [(FluxFldAbbreviated) = "JSON", (FluxFldHelp) = "can hold free text for instance for specific order state"];
}

message RollingMaxOrderCount{
  required int32 max_rolling_tx_count = 1 [(FluxFldHelp) = "max new orders count allowed per period defined below"];
  optional int32 rolling_tx_count_period_seconds = 2 [(FluxFldHelp) = "sliding window interval of above count enforcement, not setting this value implies SOD is window-start & checking-time as window-end"];
}