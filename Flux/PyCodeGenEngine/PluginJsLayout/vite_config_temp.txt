import { defineConfig } from 'vite';
import react from '@vitejs/plugin-react';
import path from 'path';
import { nodePolyfills } from 'vite-plugin-node-polyfills';

export default defineConfig(({ mode }) => {
  return {
    plugins: [
      react(),
      nodePolyfills({
        // Whether to polyfill `node:` protocol imports
        protocolImports: true,
      }),
    ],

    esbuild: {
      loader: 'jsx',
      include: /src\/.*\.jsx?$/,
      exclude: [],
    },

    server: {
      host: true,
      # @@protoc_insertion_point(port_config)
      open: false,
      cors: true,
    },

    build: {
      outDir: 'build',
      sourcemap: mode === 'development',
      rollupOptions: {
        output: {
          manualChunks: {
            'vendor-react': ['react', 'react-dom', 'react-redux', '@reduxjs/toolkit', 'prop-types', 'react-error-boundary', 'reselect'],
            'vendor-mui': ['@mui/material', '@mui/icons-material', '@mui/x-date-pickers', '@emotion/react', '@emotion/styled'],
            'vendor-ui': ['framer-motion', 'react-accessible-treeview', 'react-grid-layout', 'react-markdown', 'react-number-format', 'react-spinners'],
            'vendor-utils': ['axios', 'dayjs', 'lodash', 'file-saver', 'js-sha256', 'xlsx'],
            'vendor-json': ['@textea/json-viewer'],
            'vendor-echarts': ['echarts'],
            'vendor-plotly': ['plotly.js', 'react-plotly.js'],
            'vendor-xyflow': ['@xyflow/react'],
            'vendor-pivot': ['react-pivottable'],
            'vendor-dnd': ['@dnd-kit/core', '@dnd-kit/sortable', '@dnd-kit/utilities'],
          },
        }
      },
      worker: {
        format: 'es',
      }
    },

    base: mode === 'development' ? '/' : '/static/',

    resolve: {
      alias: {
        '@': path.resolve(__dirname, './src'),
        '@components': path.resolve(__dirname, './src/components'),
        '@utils': path.resolve(__dirname, './src/utils'),
        '@hooks': path.resolve(__dirname, './src/hooks'),
        '@workers': path.resolve(__dirname, './src/workers'),
      }
    },

    optimizeDeps: {
      esbuildOptions: {
        loader: {
          '.js': 'jsx',
        },
      }
    }
  };
});