syntax = "proto2";
import 'flux_options.proto';
import 'ui_option_utils.proto';


enum DummyEnumP{
  DUMMY_P = 0;
}

// , ERROR, WARNING, INFO, DEBUG, UNSPECIFIED
enum Severity{
  // Sequence must be in descending order of priority excluding unspecified - used in aggregates based on priority
  Severity_UNSPECIFIED = 0;  // GRAY
  Severity_CRITICAL = 1; // RED FLASHING
  Severity_ERROR = 2; // RED
  Severity_WARNING = 3; // AMBER
  Severity_INFO = 4; // BLUE
  Severity_DEBUG = 5; // BLACK
}

message UILayout{
    option (FluxMsgJsonRoot) = {
    CreateOp: AggregateType_UNSPECIFIED,
    ReadOp: AggregateType_UNSPECIFIED,
    UpdateOp: AggregateType_UNSPECIFIED,
    DeleteOp: AggregateType_UNSPECIFIED,
    ReadByIDWebSocketOp: AggregateType_UNSPECIFIED
  };

    //Server generated unique Id
    required int32 id = 1 [(FluxFldOrmNoUpdate) = true, (FluxFldServerPopulate) = true, (FluxFldHide) = "True"];
    required string profile_id = 2 [(FluxFldIndex) = true];
    repeated WidgetUIDataElement widget_ui_data_elements = 3;
    optional Theme theme = 4;
}

message UILayoutList {
  repeated UILayout ui_layout = 1;
}

message Alert{
  required string id = 1 [(FluxFldOrmNoUpdate) = true, (FluxFldServerPopulate) = true, (FluxFldHide) = "True"];
  optional bool dismiss = 2 [default=false, (FluxFldUIUpdateOnly) = true, (FluxFldSequenceNumber) = 1, (FluxFldNoCommonKey) = true, (FluxFldButton) = {
    unpressed_caption: "dismiss",
    pressed_caption: "undo",
    value_color_map: "true=DEBUG,false=INFO"
    button_type: BUTTON_TYPE_RECTANGLE,
    button_size: BUTTON_SIZE_MEDIUM,
    action: "flux_toggle",
    pressed_value_as_text: "true",
    allow_force_update: true
  }];
  required Severity severity = 3 [(FluxFldColor) = "Severity_CRITICAL=CRITICAL,Severity_ERROR=ERROR,Severity_WARNING=WARNING,Severity_INFO=INFO, Severity_DEBUG=DEBUG, Severity_UNSPECIFIED=UNSPECIFIED"];
  optional int32 alert_count = 4 ;
  required string alert_brief = 5 [(FluxFldSizeMax) = 32, (FluxFldTextAlign) = "left"];
  // must prefix strat:<strat-name> for strat alerts
  optional string alert_details = 6 [(FluxFldAbbreviated) = "JSON"];
  optional int64 last_update_date_time = 7 [(FluxFldValIsDateTime) = true];
  // populated only if this alert is for one or more orders
  //repeated OrderBrief impacted_order = 8; // todo: order_brief req in alert??
}
